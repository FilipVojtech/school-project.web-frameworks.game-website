@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-5">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input
                    asp-for="Input.UserName"
                    class="form-control"
                    autocomplete="username"
                    aria-required="true"
                    placeholder="Username"
                >
                <label asp-for="Input.UserName">Username</label>
                <span asp-validation-for="Input.UserName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input
                    asp-for="Input.Email"
                    class="form-control"
                    autocomplete="email"
                    aria-required="true"
                    placeholder="name@example.com"
                />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="input-group mb-3">
                <div class="form-floating">
                    <input
                        asp-for="Input.Password"
                        id="password"
                        class="form-control"
                        autocomplete="new-password"
                        aria-required="true"
                        placeholder="••••••••"
                    />
                    <label asp-for="Input.Password">Password</label>
                </div>
                <button
                    type="button"
                    class="btn btn-outline-primary rounded-end"
                    onclick="togglePassword(this, '#password')"
                ><i class="bi bi-eye"></i></button>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="input-group mb-3">
                <div class="form-floating">
                    <input
                        asp-for="Input.ConfirmPassword"
                        id="confirm-password"
                        class="form-control"
                        autocomplete="new-password"
                        aria-required="true"
                        placeholder="••••••••"
                    />
                    <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                </div>
                <button
                    type="button"
                    class="btn btn-outline-primary rounded-end"
                    onclick="togglePassword(this, '#confirm-password')"
                ><i class="bi bi-eye"></i></button>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    <div class="col-md-4 col-md-offset-2">
        <section>
            <h3>Use another service to register</h3>
            <hr/>
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this
                            <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                                about setting up this ASP.NET application to support logging in via external
                                services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form
                        id="external-account"
                        asp-page="./ExternalLogin"
                        asp-route-returnUrl="@Model.ReturnUrl"
                        method="post"
                        class="form-horizontal"
                    >
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    switch (provider.Name)
                                    {
                                        case "Twitter":
                                        {
                                            <button
                                                type="submit"
                                                class="btn btn-primary"
                                                name="provider"
                                                value="@provider.Name"
                                                title="Log in using your @provider.DisplayName account"
                                            >Twitter (now X)
                                            </button>
                                            break;
                                        }
                                        default:
                                        {
                                            <button
                                                type="submit"
                                                class="btn btn-primary"
                                                name="provider"
                                                value="@provider.Name"
                                                title="Log in using your @provider.DisplayName account"
                                            >@provider.DisplayName</button>
                                            break;
                                        }
                                    }
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
    <script>
        /**
         * Toggle showing contents of a password field
         * @@param buttonEl The button element being clicked
         * @@param fieldSelector The password field being toggled
         */
        function togglePassword(buttonEl, fieldSelector) {
            const passwordField = $(fieldSelector)[0];
            if (passwordField.type === "password") {
                buttonEl.innerHTML = "<i class=\"bi bi-eye-slash\"></i>";
                passwordField.type = ("text");
            } else {
                buttonEl.innerHTML = "<i class=\"bi bi-eye\"></i>";
                passwordField.type = ("password");
            }
        }
    </script>
}
